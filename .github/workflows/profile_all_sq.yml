name: Plot performance profiles for all, single and quadruple

on:
  # Trigger the workflow on push or pull request
  #push:
  #pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 5 * * *'
  # Trigger the workflow manually
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false

# Show the git ref in the workflow name if it is invoked manually.
run-name: ${{ github.event_name == 'workflow_dispatch' && format('Manual run {0}', inputs.git-ref) || '' }}


jobs:
  test:
    name: Profile PRIMA.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [latest]
        dim: [all]
        solver: [cobylal, cobylan, uobyqa, newuoa, bobyqa, lincoa]  # prima is too expensive
        competitor: [classical, archiva]
        precision: [single, quadruple]
        ctol_indicator: [0, 1, 2]
        exclude:
          - solver: uobyqa
            ctol_indicator: 1
          - solver: uobyqa
            ctol_indicator: 2
          - solver: newuoa
            ctol_indicator: 1
          - solver: newuoa
            ctol_indicator: 2
          - solver: bobyqa
            ctol_indicator: 1
          - solver: bobyqa
            ctol_indicator: 2
          - solver: uobyqa  # See https://github.com/libprima/prima/issues/98
            competitor: classical
            precision: single

    steps:
      - name: Get the solver name
        run:  echo "SOLNAME=$(echo ${{ matrix.solver }} | cut -c1-6)" >> $GITHUB_ENV

      - name: Run `sudo apt update`
        run: sudo apt update  # Otherwise, free-disk-space or other actions relying on `apt` may fail

      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          # all of these default to true, but feel free to set to "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false  # Important, or the runner may be shut down due to memory starvation.

      - name: Clone Repository (Latest)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref == ''
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          submodules: recursive
      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          submodules: recursive

      - name: Miscellaneous setup
        run: bash .github/scripts/misc_setup

      - name: Clone MatCUTEst
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          repository: matcutest/matcutest_compiled
          path: matcutest

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/link_gfortran ${{ env.GFORTRAN_VERSION }}

      - name: Install epstopdf and ghostscript
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/install_epstopdf && bash .github/scripts/install_ghostscript

      - name: Check MATLAB
        id: check_matlab
        run: if type 'matlab' &> /dev/null ; then echo "::set-output name=has_matlab::true" ; fi

      - name: Cache MATLAB  # N.B.: Clear the cache when the `latest` version of MATLAB changes in March and September
        uses: actions/cache@v3.3.2
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}-yes

      - name: Set up MATLAB with optimization toolbox
        if: ${{ steps.check_matlab.outputs.has_matlab != 'true' }}
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: ${{ matrix.matlab }}
          products: Optimization_Toolbox

      - name: Conduct the test
        uses: matlab-actions/run-command@v1.2.1
        with:
          command: |
            blacklist = {};
            blacklist = [blacklist, {'TOINTQOR'}];  % uobyqa
            blacklist = [blacklist, {'ARGLINA', 'ARGLINC', 'LUKSAN11LS', 'LUKSAN13LS', 'LUKSAN16LS', 'SPIN2LS', 'QING'}];  % newuoa
            blacklist = [blacklist, {'CHEBYQAD', 'HOLMES'}];  % bobyqa
            blacklist = [blacklist, {'AGG', 'ARGLALE', 'AVION2', 'CVXQP1', 'DALLASS', 'DUAL1', 'DUAL3', 'DUAL4', 'GMNCASE1', 'GMNCASE2', 'GMNCASE3', 'HIMMELBI', 'SMBANK', 'SSEBLIN', 'ZECEVIC2'}];  % lincoa
            blacklist = [blacklist, {'ACOPR14', 'ANTWERP', 'CANTILVR', 'DEGENLPA', 'DEGENLPB', 'DNIEPER', 'ERRINROSNE', 'GBRAIN', 'GOULDQP1', 'GROUPING', 'HS33', 'HS105', 'LAUNCH', 'LIN', 'LOADBAL', 'MEYER3NE', 'NYSTROM5', 'HALDMADS', 'POLAK2', 'PRODPL0', 'PRODPL1', 'RAT42', 'RK23', 'TRO6X2', 'TRUSPYR1', 'WACHBIEG', 'WATER', 'WATSONNE', 'WAYSEA1NE', 'ZANGWIL3', 'ZECEVIC2', 'ZY2'}];  % cobyla

            ver;
            root_dir = pwd();

            cd(fullfile(root_dir, 'matcutest')); install(); which macup

            cd(fullfile(root_dir, 'matlab/tests'));
            options = struct();
            options.blacklist = blacklist;
            options.nr = 1;
            options.precision = '${{ matrix.precision }}';
            options.ctol_multiple = 10^(2*str2num('${{ matrix.ctol_indicator }}'));

            if strcmp('${{ matrix.solver }}', 'cobylal')
                prof('cobyla', '${{ matrix.dim }}', 'l', '${{ matrix.competitor }}', options);
            elseif strcmp('${{ matrix.solver }}', 'cobylan')
                prof('cobyla', '${{ matrix.dim }}', 'n', '${{ matrix.competitor }}', options);
            elseif  strcmp('${{ matrix.solver }}', 'lincoa')
                prof('${{ matrix.solver }}', '${{ matrix.dim }}', 'l', '${{ matrix.competitor }}', options);
            elseif  strcmp('${{ matrix.solver }}', 'bobyqa')
                prof('${{ matrix.solver }}', '${{ matrix.dim }}', 'b', '${{ matrix.competitor }}', options);
            else
                prof('${{ matrix.solver }}', '${{ matrix.dim }}', '${{ matrix.competitor }}', options);
            end


            % Move the files to prepare for uploading artifacts

            solver = '${{ env.SOLNAME }}';
            cd(fullfile(cd(), 'testdata'));
            files = dir([solver, '*.summary.*.pdf'])
            for ifile = 1 : length(files)
                file = fullfile(files(ifile).folder, files(ifile).name)
                newfile = fullfile(files(ifile).folder, ['ctol', '${{ matrix.ctol_indicator }}_', 'yes', '_optool_', files(ifile).name])
                movefile(file, newfile);
            end
            movefile(fullfile(cd(), '*summary*.pdf'), ['/tmp/', solver, '_profile_prima/']);
            movefile(fullfile(cd(), '*.txt'), ['/tmp/', solver, '_profile_prima/']);

            files = [dir(['/tmp/', solver, '_profile_prima/*start*']); dir(['/tmp/', solver, '_profile_prima/*end*'])]
            for ifile = 1 : length(files)
                file = fullfile(files(ifile).folder, files(ifile).name)
                newfile = fullfile(files(ifile).folder, ['ctol', '${{ matrix.ctol_indicator }}_', 'yes', '_optool_', files(ifile).name])
                movefile(file, newfile);
            end

      - name: Store artifacts
        uses: actions/upload-artifact@v3.1.3
        if: always()  # Always run even if the workflow is canceled manually or due to overtime.
        with:
          path: |
            /tmp/${{ env.SOLNAME }}_profile_prima/*summary*.pdf
            /tmp/${{ env.SOLNAME }}_profile_prima/*.txt
            /tmp/${{ env.SOLNAME }}_profile_prima/*start*
            /tmp/${{ env.SOLNAME }}_profile_prima/*end*

      - name: Remove the test data
        if: always()  # Always run even if the workflow is canceled manually or due to overtime.
        run: rm -rf ./matlab/tests/testdata && rm -rf /tmp/${{ env.SOLNAME }}_profile_prima
