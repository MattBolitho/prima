name: Test MATLAB, macOS ARM64

on:
  # Trigger the workflow on push or pull request
  push:
  pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 1 * * *'
  # Trigger the workflow manually
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false

# Show the git ref in the workflow name if it is invoked manually.
run-name: ${{ github.event_name == 'workflow_dispatch' && format('Manual run {0}', inputs.git-ref) || '' }}


jobs:
  test:
    name: Test MATLAB
    runs-on: [self-hosted, macOS, ARM64]
    strategy:
      fail-fast: false

    steps:
      - name: Clone Repository (Latest)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref == ''
        with:
          submodules: recursive
        #   ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
        # As of 231227, checkout with ssh fails frequently on Windows runners.
      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}
          submodules: recursive
        #   ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
        # As of 231227, checkout with ssh fails frequently on Windows runners.

      - name: Miscellaneous setup
        run: bash .github/scripts/misc_setup

      - name: Revise fmxapi.F90
        shell: bash
        run: |
          cd matlab/mex_gateways/
          $SEDI "s|\(.*maybe due to overflow.*$\)|\1\nwrite(*,*) 'x = ', x; write(*,*) 'x_dp = ', x_dp|" fmxapi.F90
          cat fmxapi.F90

      - name: Revise postprima.m
        shell: bash
        run: |
          cd matlab/interfaces/private/
          $SEDI "s/max(\[0, chist\]) > 0)/max(\[0, chist\]) > 0)\nprobinfo.raw_data\noutput\nchist/" postprima.m
          cat postprima.m

      # - name: Revise cobylb.f
      #   shell: bash
      #   run: |
      #     cd fortran/classical/cobyla/
      #     $SEDI "s/cstrv = maxval(\[ZERO, -constr\])/cstrv = maxval([\ZERO, -constr\])\n       write(*,*) 'x = ', x(1:n)\n       write(*,*) 'f = ', f\n       write(*,*) 'constr = ', constr(1:m)\n       write(*,*) 'cstrv = ', cstrv/" cobylb.f
      #     cat cobylb.f

      - name: Conduct the test
        uses: matlab-actions/run-command@v1.2.3
        with:
          command: |
              ver;
              root_dir = pwd();
              cd(root_dir);
              options = struct();
              options.debug=true;
              setup(options);
              prima('info')
              testprima(false, 1.0e-10, 100);
              setup
              setup path
              prima('info')
              testprima(false, 1.0e-10, 100);
              setup cobyla
              setup uobyqa
              setup newuoa
              setup bobyqa
              setup lincoa
              setup prima
              setup path
              setup clean
              setup path
              setup uninstall
              setup path
              setup uninstall
              cd(fullfile(root_dir, 'matlab', 'tests')); pdv
              cd(root_dir);
              setup
              prima('info')
              cd(fullfile(root_dir, 'matlab', 'examples')); rosenbrock_example
